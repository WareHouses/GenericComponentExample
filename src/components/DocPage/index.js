import React from 'react'import { Header , Grid , Table , Segment, Checkbox} from "semantic-ui-react"let style={  marginLeft:250,  maxWidth:1150,  minWidth:550,  overflowY: "scroll"}const nl2br = (str) =>{  return str.split('\n').map((item, key) => {    return <span key={key}>{item}<br/></span>  })}class ComponentExample extends React.Component{  constructor(props){    super(props);    this.state={      checked: false    }  }  toggle = () =>{    this.setState({ checked: !this.state.checked });  }  render(){    const {item} = this.props;    return(      <Grid.Row>        <Grid.Column>          <Header>            {item.title}            <Header.Subheader>{item.description}</Header.Subheader>          </Header>        </Grid.Column>        { item.code && item.react &&        <Grid.Column>          <div style={{padding:"10px"}}>            <Checkbox toggle focus onChange={this.toggle} checked={this.state.checked}/>          </div>        </Grid.Column>}        <Grid.Column>          <Segment.Group style={{marginTop:"7px"}}>            {item.react && <Segment textAlign={ item.textAlign ? item.textAlign : "left"}>{item.react}</Segment>}            {item.code && (this.state.checked || !item.react) && <Segment>{item.code}</Segment>}          </Segment.Group>        </Grid.Column>      </Grid.Row>    )  }}class PropTable extends React.Component{  renderRows=()=>{    return this.props.rows.map((item) => {      return(<Table.Row>          <Table.Cell>{item.name}</Table.Cell>          <Table.Cell>{item.default}</Table.Cell>          <Table.Cell>{item.type}</Table.Cell>          <Table.Cell>{item.description}</Table.Cell>      </Table.Row>);    })  }  render(){    return(      <Table compact basic="very">        <Table.Header>          <Table.Row>            <Table.HeaderCell>Name</Table.HeaderCell>            <Table.HeaderCell>Default</Table.HeaderCell>            <Table.HeaderCell>Type</Table.HeaderCell>            <Table.HeaderCell>Description</Table.HeaderCell>          </Table.Row>        </Table.Header>        <Table.Body>          {this.renderRows()}        </Table.Body>      </Table>    );  }}class DocPage extends React.Component{  constructor(props){    super(props);    this.state={    }  }  renderDefinitions = () =>{    return this.props.definitions.map((item,index) => {      return(        <ComponentExample item={item} key={index} />      )    })  }  renderExamples = () =>{    return this.props.examples.map((item,index) => {      return(        <ComponentExample item={item} key={index} />      )    })  }  render(){    const { name, text, description , propData} = this.props;    return(      <div style={style}>        <Grid padded columns={1}>          <Grid.Row>            <Grid.Column>              <Header>                {<h1>{name}</h1>}                <Header.Subheader>                  {description}                </Header.Subheader>              </Header>            </Grid.Column>          </Grid.Row>          { text &&          <Grid.Row>            <Grid.Column>              {text}            </Grid.Column>          </Grid.Row>}          <Grid.Row>            <Grid.Column>              {propData && <PropTable rows={propData}/>}            </Grid.Column>          </Grid.Row>          { this.props.examples &&            <Grid.Row>            <Grid.Column textAlign="left">              <h2>Examples</h2>            </Grid.Column>          </Grid.Row>          }          {this.props.examples && this.renderExamples()}          { this.props.definitions &&            <Grid.Row>              <Grid.Column textAlign="left">                <h2>Definitions</h2>              </Grid.Column>            </Grid.Row>          }          { this.props.definitions && this.renderDefinitions()}        </Grid>      </div>    );  }}export default DocPage;
